@charset 'utf-8';

////////////////////////////////////////////////////
//
//              1. Typefaces
//
////////////////////////////////////////////////////
$font-light: 'Roboto';
$font-regular: 'Roboto';
$font-medium: 'Roboto';
$font-semibold: 'Roboto';
$font-bold: 'Roboto';
$font-icon: 'artzdesign-icons';

$font-paragraph: '';

@include typeface('artzdesign', 'artzdesign', 'artzdesign-icons', 'icons', 400);

@include typeface(null, null, 'Roboto', 'light', 300);
@include typeface(null, null, 'Roboto', 'regular', 400);
@include typeface(null, null, 'Roboto', 'medium', 500);

@include typeface(null, null, 'PT Serif', 'heading', 400);

////////////////////////////////////////////////////
//
//              2. Sizes
//
////////////////////////////////////////////////////
@include font-utility('xxs',  map-get($font-sizes, xxs));
@include font-utility('xs',   map-get($font-sizes, xs));
@include font-utility('s',    map-get($font-sizes, s));
@include font-utility('m',    map-get($font-sizes, m));
@include font-utility('l',    map-get($font-sizes, l));
@include font-utility('xl',   map-get($font-sizes, xl));
@include font-utility('xxl',  map-get($font-sizes, xxl));

////////////////////////////////////////////////////
//
//              3. Alignement
//
////////////////////////////////////////////////////

.text-left { text-align: left; }
.text-center { text-align: center; }
.text-right { text-align: right; }

////////////////////////////////////////////////////
//
//              4. Icons
//
////////////////////////////////////////////////////
[class^="icon-"],
[class*=" icon-"],
.icon {
  // use !important to prevent issues with browser extensions that change fonts
  font-family: $font-icon !important;
  speak: none;
  font-variant: normal;
  text-transform: none;
  line-height: 1;

  // Better Font Rendering
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

$icon-design: "\e900";
$icon-spatula: "\e901";
$icon-archive: "\e902";

$icons: ("design", $icon-design),
        ("spatula", $icon-spatula),
        ("archive", $icon-archive)
      ;

@each $name, $ascii in $icons
{
  #{".icon-"+$name}::before
  {
    content: unicode($ascii);
  }
}
